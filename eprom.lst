(SRCTools Version 3.1.1)
 HexLoc     DecLoc    MachWord   Label        Instruction                Comment
                                              .org 0                     
00000000  0000000000  309ffffc                lar r2, MYVGA              ; r2 holds the frame buffer base address
00000004  0000000004  2f41fffc                la r29, BTN                ; r29 holds the button module address
                                                                         
                                                                         
00000008  0000000008  28400001                la r1, 1                   ; "Shake" the screen
0000000c  0000000012  2fc00048                la r31, LOOP1              
00000010  0000000016  2e00006c                la r24, LOOP2              
00000014  0000000020  311fffe8                lar r4, 2097152            
00000018  0000000024  298000ac                la r6, LEFT                
0000001c  0000000028  29c000bc                la r7, UP                  
00000020  0000000032  2a0000cc                la r8, DOWN                
00000024  0000000036  2a40009c                la r9, RIGHT               
00000028  0000000040  379fffd4                lar r30, MYVGA             ; Use the base address
0000002c  0000000044  369fffd0                lar r26, MYVGA             ; third cursor
00000030  0000000048  62c42000                add r11, r2, r2            
00000034  0000000052  2c402710                la r17, 10000              ;10K clk ticks
00000038  0000000056  2c8000dc                la r18, SHAKE              
0000003c  0000000060  2dc00000                la r23, 0                  
00000040  0000000064  2ec0007c                la r27, DELAY              
00000044  0000000068  2f00008c                la r28, TOP                
                                                                         
00000048  0000000072            LOOP1:                                   
                                                                         
00000048  0000000072  187c0000                st r1, 0(r30)              ; Write a pixel
0000004c  0000000076  6fbc0004                addi r30, r30, 4           ; Point to the next pixel
00000050  0000000080  a0fc2000                and r3, r30, r2            ; Check for the end of the framestore
00000054  0000000084  403e3003                brnz r31, r3               ; Repeat until r30 points past the framestore
00000058  0000000088  40316003                brnz r24, r22              ; Branch to Loop2 if r22 is a nonzero
0000005c  0000000092  379fffa0                lar r30, MYVGA             ; Write upper left pixel black
00000060  0000000096  28400000                la r1, 0                   ; Set r1 to black
00000064  0000000100  18740000                st r1, 0(r26)              ; Write upper left pixel black
00000068  0000000104  40360001                br r27                     
                                                                         
0000006c  0000000108            LOOP2:                                   
                                                                         
0000006c  0000000108  2fac0000                la r30, 0(r22)             ; Start in final cursor position
00000070  0000000112  28400000                la r1, 0                   ; Set r1 to black
00000074  0000000116  187c0000                st r1, 0(r30)              ; Start in final cursor position
00000078  0000000120  40360001                br r27                     
                                                                         
0000007c  0000000124            DELAY:                                   
0000007c  0000000124  6c63ffff                addi r17, r17, -1          ;deducts 1 from 10K
00000080  0000000128  40371003                brnz r27, r17              ;branch back to DELAY if nonzero, when
00000084  0000000132  2c402710                la r17, 10000              
00000088  0000000136  40380001                br r28                     
                                                                         
0000008c  0000000140            TOP:                                     
0000008c  0000000140  097a0000                ld r5, 0(r29)              ; load the memory from address r29 to r5
00000090  0000000144  ad0a001f                andi r20, r5, 31           
00000094  0000000148  40394002                brzr r28, r20              
00000098  0000000152  40120001                br r9                      
                                                                         
0000009c  0000000156            RIGHT:                                   
0000009c  0000000156  ab4a0001                andi r13, r5, 1            ;right
000000a0  0000000160  400cd002                brzr r6, r13               ; branch to left; in binary, the code will either return a 1 or 0 when ANDed
                                                                         ;sub r21,r30,r11
                                                                         ;brzr r6,r21
000000a4  0000000164  6eb40004                addi r26, r26, 4           ; Point to the rightmost pixel
000000a8  0000000168  1df40000                st r23, 0(r26)             ; Write a pixel
                                                                         ;la r22,0(r26)
                                                                         
000000ac  0000000172            LEFT:                                    
000000ac  0000000172  ab8a0002                andi r14, r5, 2            ;left
000000b0  0000000176  400ee002                brzr r7, r14               ; branch to UP
                                                                         ;sub r21,r30,r4
                                                                         ;brzr r7,r21
                                                                         ;addi r21,r30,-1
                                                                         ;brmi r7,r21
000000b4  0000000180  6eb5fffc                addi r26, r26, -4          ; Point to the leftmost pixel
000000b8  0000000184  1df40000                st r23, 0(r26)             ; Write a pixel
                                                                         ;la r22,0(r26)
                                                                         
000000bc  0000000188            UP:                                      
000000bc  0000000188  abca0004                andi r15, r5, 4            ;up
000000c0  0000000192  4010f002                brzr r8, r15               ; branch to DOWN
                                                                         ;addi r21,r30,-4096
                                                                         ;brmi r8,r21
                                                                         ;addi r17,r17,-1
                                                                         ;brnz r7,r17
000000c4  0000000196  6eb5f000                addi r26, r26, -4096       ; Point to the next pixel
000000c8  0000000200  1df40000                st r23, 0(r26)             ; Write a pixel
                                                                         ;la r22,0(r26)
                                                                         
000000cc  0000000204            DOWN:                                    
000000cc  0000000204  ac0a0008                andi r16, r5, 8            ;down
000000d0  0000000208  40250002                brzr r18, r16              ; branch back to Loop 2 if the button is not pressed
                                                                         ;addi r21,r30,4096
                                                                         ;sub r21,r21,r11
                                                                         ;brnz r25,r21 ;if r22 is a nonzero, branch back to Loop 2
                                                                         ;addi r17,r17,-1
                                                                         ;brnz r8,r17
000000d4  0000000212  6eb41000                addi r26, r26, 4096        ; Point to the next pixel
000000d8  0000000216  1df40000                st r23, 0(r26)             ; Write a pixel
                                                                         ;la r22,0(r26)
                                                                         
000000dc  0000000220            SHAKE:                                   
000000dc  0000000220  acca0010                andi r19, r5, 16           
000000e0  0000000224  40373002                brzr r27, r19              ; branch back to Loop 2 if the button is not pressed
000000e4  0000000228  28400001                la r1, 1                   ; change the color back to white
000000e8  0000000232  403f3003                brnz r31, r19              ;
                                                                         
                                                                         
000000ec  0000000236  f8000000                stop                       
                                                                         
                                              .org 2097152               
00200000  0002097152            MYVGA:        .dw 524288                 
                                                                         ;END: nop
                                              .org -4                    
fffffffc  4294967292            BTN:          .dw 1                      

--- Symbol Table ---
SHAKE: 220
DELAY: 124
LEFT: 172
MYVGA: 2097152
TOP: 140
RIGHT: 156
BTN: 4294967292
DOWN: 204
LOOP2: 108
UP: 188
LOOP1: 72
